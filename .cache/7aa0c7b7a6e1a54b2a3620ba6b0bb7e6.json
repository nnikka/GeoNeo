{"dependencies":[{"name":"C:\\Users\\nikak\\Desktop\\front\\geoneo\\package.json","includedInParent":true,"mtime":1538228850173},{"name":"C:\\Users\\nikak\\Desktop\\front\\geoneo\\node_modules\\gl-vec4\\package.json","includedInParent":true,"mtime":1538228300664}],"generated":{"js":"module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp (out, a, b, t) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3]\n  out[0] = ax + t * (b[0] - ax)\n  out[1] = ay + t * (b[1] - ay)\n  out[2] = az + t * (b[2] - az)\n  out[3] = aw + t * (b[3] - aw)\n  return out\n}\n","map":{"mappings":[{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\gl-vec4\\lerp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"..\\node_modules\\gl-vec4\\lerp.js":"module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp (out, a, b, t) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3]\n  out[0] = ax + t * (b[0] - ax)\n  out[1] = ay + t * (b[1] - ay)\n  out[2] = az + t * (b[2] - az)\n  out[3] = aw + t * (b[3] - aw)\n  return out\n}\n"},"lineCount":23}},"hash":"8b40a01025399b585db03653daf7190f","cacheData":{"env":{}}}
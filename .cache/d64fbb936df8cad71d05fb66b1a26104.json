{"dependencies":[{"name":"C:\\Users\\nikak\\Desktop\\front\\geoneo\\package.json","includedInParent":true,"mtime":1538228850173},{"name":"C:\\Users\\nikak\\Desktop\\front\\geoneo\\node_modules\\gl-quat\\package.json","includedInParent":true,"mtime":1538228300026},{"name":"gl-vec3/dot","loc":{"line":1,"column":21}},{"name":"gl-vec3/cross","loc":{"line":2,"column":23}},{"name":"gl-vec3/length","loc":{"line":3,"column":24}},{"name":"gl-vec3/normalize","loc":{"line":4,"column":27}},{"name":"./normalize","loc":{"line":6,"column":28}},{"name":"./setAxisAngle","loc":{"line":7,"column":28}}],"generated":{"js":"var vecDot = require('gl-vec3/dot')\nvar vecCross = require('gl-vec3/cross')\nvar vecLength = require('gl-vec3/length')\nvar vecNormalize = require('gl-vec3/normalize')\n\nvar quatNormalize = require('./normalize')\nvar quatAxisAngle = require('./setAxisAngle')\n\nmodule.exports = rotationTo\n\nvar tmpvec3 = [0, 0, 0]\nvar xUnitVec3 = [1, 0, 0]\nvar yUnitVec3 = [0, 1, 0]\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nfunction rotationTo (out, a, b) {\n  var dot = vecDot(a, b)\n  if (dot < -0.999999) {\n    vecCross(tmpvec3, xUnitVec3, a)\n    if (vecLength(tmpvec3) < 0.000001) {\n      vecCross(tmpvec3, yUnitVec3, a)\n    }\n    vecNormalize(tmpvec3, tmpvec3)\n    quatAxisAngle(out, tmpvec3, Math.PI)\n    return out\n  } else if (dot > 0.999999) {\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    out[3] = 1\n    return out\n  } else {\n    vecCross(tmpvec3, a, b)\n    out[0] = tmpvec3[0]\n    out[1] = tmpvec3[1]\n    out[2] = tmpvec3[2]\n    out[3] = 1 + dot\n    return quatNormalize(out, out)\n  }\n}\n","map":{"mappings":[{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\node_modules\\gl-quat\\rotationTo.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"..\\node_modules\\gl-quat\\rotationTo.js":"var vecDot = require('gl-vec3/dot')\nvar vecCross = require('gl-vec3/cross')\nvar vecLength = require('gl-vec3/length')\nvar vecNormalize = require('gl-vec3/normalize')\n\nvar quatNormalize = require('./normalize')\nvar quatAxisAngle = require('./setAxisAngle')\n\nmodule.exports = rotationTo\n\nvar tmpvec3 = [0, 0, 0]\nvar xUnitVec3 = [1, 0, 0]\nvar yUnitVec3 = [0, 1, 0]\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nfunction rotationTo (out, a, b) {\n  var dot = vecDot(a, b)\n  if (dot < -0.999999) {\n    vecCross(tmpvec3, xUnitVec3, a)\n    if (vecLength(tmpvec3) < 0.000001) {\n      vecCross(tmpvec3, yUnitVec3, a)\n    }\n    vecNormalize(tmpvec3, tmpvec3)\n    quatAxisAngle(out, tmpvec3, Math.PI)\n    return out\n  } else if (dot > 0.999999) {\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    out[3] = 1\n    return out\n  } else {\n    vecCross(tmpvec3, a, b)\n    out[0] = tmpvec3[0]\n    out[1] = tmpvec3[1]\n    out[2] = tmpvec3[2]\n    out[3] = 1 + dot\n    return quatNormalize(out, out)\n  }\n}\n"},"lineCount":51}},"hash":"797046917589f0c0dfd4a3c6181cfc8a","cacheData":{"env":{}}}